package vistas;

import control.*;
import modelo.*;
import java.util.ArrayList;
import java.time.LocalDate;
import java.time.format.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Gomez Jon Darian, Guardia Lucero Santiago Agust√≠n, Heredia Leandro
 */
public class VistaDestino extends javax.swing.JInternalFrame {

    private Conexion c;
    private DestinoData dd;
    private ArrayList<Destino> destinos;
    private DefaultTableModel modelo;
    /**
     * Creates new form VistaDestino
     */
    public VistaDestino() {
        try {
            initComponents();
            
            c = new Conexion();
            dd = new DestinoData(c);
            destinos = (ArrayList)dd.obtenerDestinos();
            modelo = new DefaultTableModel();
            armarCabecera();
            
            btnGrupo.add(radioTodos);
            btnGrupo.add(radioActivos);
            btnGrupo.add(radioInactivos);
            
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Error en la conexion. " + ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrupo = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtPais = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtFechaInicial = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtFechaFinal = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        checkActivo = new javax.swing.JCheckBox();
        btnCargar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        radioTodos = new javax.swing.JRadioButton();
        radioActivos = new javax.swing.JRadioButton();
        radioInactivos = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabAlojamientos = new javax.swing.JTable();
        btnBuscar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setClosable(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Agregar Destino");

        jLabel10.setText("dd/mm/yyyy");
        jLabel10.setToolTipText("Fecha de nacimiento:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Nombre:");

        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtNombre.setEnabled(false);
        txtNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreFocusLost(evt);
            }
        });

        txtPais.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPais.setEnabled(false);
        txtPais.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPaisFocusLost(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Pais:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("F. Inicial:");
        jLabel3.setToolTipText("Fecha Inicial:");

        txtFechaInicial.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtFechaInicial.setEnabled(false);
        txtFechaInicial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFechaInicialFocusLost(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("F. Final:");
        jLabel4.setToolTipText("Fecha Final");

        txtFechaFinal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtFechaFinal.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Activo");

        checkActivo.setEnabled(false);

        btnCargar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCargar.setText("Cargar");
        btnCargar.setEnabled(false);
        btnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarActionPerformed(evt);
            }
        });

        btnNuevo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setText("Lista de Destinos");

        radioTodos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioTodos.setText("Todos");

        radioActivos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioActivos.setText("Activos");

        radioInactivos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioInactivos.setText("Inactivos");

        tabAlojamientos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabAlojamientos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabAlojamientos);

        btnBuscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel9.setText("dd/mm/yyyy");
        jLabel9.setToolTipText("Fecha de nacimiento:");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5))
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10))
                            .addComponent(checkActivo)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtFechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtPais, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(btnCargar)
                        .addGap(18, 18, 18)
                        .addComponent(btnNuevo))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(14, 14, 14))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(radioTodos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radioActivos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radioInactivos)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnBuscar)
                        .addGap(246, 246, 246))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioTodos)
                            .addComponent(radioActivos)
                            .addComponent(radioInactivos))
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtFechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkActivo)
                            .addComponent(jLabel5))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNuevo)
                            .addComponent(btnCargar))))
                .addGap(18, 18, 18)
                .addComponent(btnBuscar)
                .addContainerGap(18, Short.MAX_VALUE))
            .addComponent(jSeparator1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreFocusLost
        // TODO add your handling code here:
        if(txtNombre.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Ingrese el nombre del destino");
            txtNombre.requestFocus();
        }
    }//GEN-LAST:event_txtNombreFocusLost

    private void txtFechaInicialFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaInicialFocusLost
        // TODO add your handling code here:
        try{
            if(txtFechaInicial.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Ingrese la fecha inicial de destino");
                txtFechaInicial.requestFocus();
        }
        }catch(DateTimeParseException dtp){
            JOptionPane.showMessageDialog(this, "Formato de fecha incorrecto");
            txtFechaFinal.setText("");
            txtFechaFinal.requestFocus();
        }
    }//GEN-LAST:event_txtFechaInicialFocusLost

    private void btnCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarActionPerformed
        // TODO add your handling code here:
        try{

            if(!txtFechaFinal.getText().isEmpty()){

                Destino d = new Destino();

                d.setNombre(txtNombre.getText());
                d.setPais(txtPais.getText());
                d.setFechaInicial(LocalDate.parse(txtFechaInicial.getText(), DateTimeFormatter.ofPattern("dd/MM/yyyy")));
                d.setFechaFinal(LocalDate.parse(txtFechaFinal.getText(), DateTimeFormatter.ofPattern("dd/MM/yyyy")));
                d.setActivo(checkActivo.isEnabled());

                dd.agregarDestino(d);
                limpiarCampos();
            }
            else{
                JOptionPane.showMessageDialog(this, "Ingrese la fecha final de destino");
                txtFechaFinal.requestFocus();
            }

        }catch(DateTimeParseException dtp){
            JOptionPane.showMessageDialog(this, "Formato de fecha incorrecto");
            txtFechaFinal.setText("");
            txtFechaFinal.requestFocus();
        }
    }//GEN-LAST:event_btnCargarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        limpiarCampos();
        activarCampos();
        txtNombre.requestFocus();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        vaciarTabla();
        boolean check1 = radioTodos.isSelected();
        boolean check2 = radioActivos.isSelected();
        boolean check3 = radioInactivos.isSelected();

        if(check1)
            llenarTablaTodos();
        if(check2)
            llenarTablaActivos();
        if(check3)
            llenarTablaInactivos();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtPaisFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPaisFocusLost
        // TODO add your handling code here:
        if(txtPais.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Ingrese el pais de destino");
            txtPais.requestFocus();
        }
    }//GEN-LAST:event_txtPaisFocusLost

    private void activarCampos(){
        txtNombre.setEnabled(true);
        txtPais.setEnabled(true);
        txtFechaInicial.setEnabled(true);
        txtFechaFinal.setEnabled(true);
        checkActivo.setEnabled(true);
        btnCargar.setEnabled(true);
    }
    
    private void limpiarCampos(){
        txtNombre.setText("");
        txtPais.setText("");
        txtFechaInicial.setText("");
        txtFechaFinal.setText("");
        checkActivo.setSelected(false);
    }
    
    private void armarCabecera(){
        ArrayList<Object> titulos = new ArrayList<>();
        
        titulos.add("ID");
        titulos.add("Nombre");
        titulos.add("Pais");
        titulos.add("Fecha Inicial");
        titulos.add("Fecha Final");
        titulos.add("Activo");
        
        for (Object titulo : titulos) {
            modelo.addColumn(titulo);
        }
        
        tabAlojamientos.setModel(modelo);
    }
    
    private void vaciarTabla(){
        int filas = modelo.getRowCount() - 1;
        
        for (int i = filas; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }
    
    private void llenarTablaTodos(){
        for (Destino d : destinos) {
            modelo.addRow(new Object[]{d.getIdDestino(),d.getNombre(),d.getPais(),d.getFechaInicial().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")),d.getFechaFinal().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")),d.isActivo()});
        }
    }
    
    private void llenarTablaActivos(){
        for (Destino d : destinos) {
            if(d.isActivo()){
                modelo.addRow(new Object[]{d.getIdDestino(),d.getNombre(),d.getPais(),d.getFechaInicial().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")),d.getFechaFinal().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")),d.isActivo()});
            }
        }
    }
    
    private void llenarTablaInactivos(){
        for (Destino d : destinos) {
            if(!d.isActivo()){
                modelo.addRow(new Object[]{d.getIdDestino(),d.getNombre(),d.getPais(),d.getFechaInicial().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")),d.getFechaFinal().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")),d.isActivo()});
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCargar;
    private javax.swing.ButtonGroup btnGrupo;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JCheckBox checkActivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton radioActivos;
    private javax.swing.JRadioButton radioInactivos;
    private javax.swing.JRadioButton radioTodos;
    private javax.swing.JTable tabAlojamientos;
    private javax.swing.JTextField txtFechaFinal;
    private javax.swing.JTextField txtFechaInicial;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPais;
    // End of variables declaration//GEN-END:variables
}
