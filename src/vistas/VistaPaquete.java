package vistas;

import control.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import modelo.*;
import java.time.*;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;

import java.util.logging.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import java.util.*;

/**
 * @author Gomez Jon Darian, Guardia Lucero Santiago Agust√≠n, Heredia Leandro
 */
public class VistaPaquete extends javax.swing.JInternalFrame {

    private PaqueteData pd;
    private ClienteData cd;
    private TransporteData td;
    private AlojamientoData ad;
    private MenuData md;
    private DestinoData dd;
    private ArrayList<Paquete> listaPaquetes;
    private ArrayList<Cliente> listaClientes;
    private ArrayList<Menu> listaMenues;
    private ArrayList<Destino> listaDestinos;
    
    private Conexion con;
    
    private DefaultTableModel modelo;
    /**
     * Creates new form VistaPaquete
     */
    public VistaPaquete() {
        try {
            initComponents();
            
            con = new Conexion("jdbc:mysql://localhost/paquetes_turisticos", "root", "");
            pd = new PaqueteData(con);
            cd = new ClienteData(con);
            td = new TransporteData(con);
            ad = new AlojamientoData(con);
            md = new MenuData(con);
            dd = new DestinoData(con);
            listaPaquetes = (ArrayList)pd.obtenerPaquetes();
            listaClientes = (ArrayList)cd.obtenerClientes();
            listaMenues = (ArrayList)md.obtenerMenues();
            listaDestinos = (ArrayList)dd.obtenerDestinos();
            
            llenarComboCliente();
            llenarComboMenu();
            llenarComboDestino();
            
            jtCant.setText(1+"");
            btnGuardar.setEnabled(false);
            
            btnGrupo.add(jrTodos);
            btnGrupo.add(jrActivos);
            btnGrupo.add(jrInactivos);
            
            modelo = new DefaultTableModel();
            armarCabecera();
            
            setearCalendario();
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(VistaPaquete.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrupo = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jcCliente = new javax.swing.JComboBox<>();
        jcTransporte = new javax.swing.JComboBox<>();
        jcAlojamiento = new javax.swing.JComboBox<>();
        jcMenu = new javax.swing.JComboBox<>();
        jcDestino = new javax.swing.JComboBox<>();
        jtCosto = new javax.swing.JTextField();
        jcActivo = new javax.swing.JCheckBox();
        btnGuardar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        jrTodos = new javax.swing.JRadioButton();
        jrActivos = new javax.swing.JRadioButton();
        jrInactivos = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtabPaquetes = new javax.swing.JTable();
        btnBuscar = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jtCant = new javax.swing.JTextField();
        btnCalcular = new javax.swing.JButton();
        dateFechaInicio = new com.toedter.calendar.JDateChooser();
        dateFechaFinal = new com.toedter.calendar.JDateChooser();

        setClosable(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Crear Paquete");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Cliente:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Transporte:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Alojamiento:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Menu:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Destino:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Fecha Inicio:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Fecha Final:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Costo Total:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Activo");

        jcCliente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jcTransporte.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jcAlojamiento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jcMenu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jcDestino.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jcDestino.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcDestinoItemStateChanged(evt);
            }
        });

        jtCosto.setEditable(false);
        jtCosto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnGuardar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel13.setText("Lista Paquetes");

        jrTodos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jrTodos.setText("Todos");

        jrActivos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jrActivos.setText("Activos");

        jrInactivos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jrInactivos.setText("Inactivos");

        jtabPaquetes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtabPaquetes);

        btnBuscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Personas:");

        jtCant.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnCalcular.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCalcular.setText("Calcular");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel14)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jcCliente, 0, 190, Short.MAX_VALUE)
                            .addComponent(jcDestino, 0, 190, Short.MAX_VALUE)
                            .addComponent(jcAlojamiento, 0, 190, Short.MAX_VALUE)
                            .addComponent(jcMenu, 0, 190, Short.MAX_VALUE)
                            .addComponent(jcTransporte, 0, 190, Short.MAX_VALUE)
                            .addComponent(jtCant, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcActivo)
                            .addComponent(dateFechaInicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dateFechaFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(83, 83, 83))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(97, 97, 97)
                                .addComponent(btnGuardar)
                                .addGap(32, 32, 32)
                                .addComponent(btnCalcular)))
                        .addGap(123, 123, 123)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnBuscar)
                                .addGap(243, 243, 243))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(192, 192, 192))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jrTodos)
                                .addGap(18, 18, 18)
                                .addComponent(jrActivos)
                                .addGap(18, 18, 18)
                                .addComponent(jrInactivos)
                                .addGap(161, 161, 161))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jrTodos)
                            .addComponent(jrActivos)
                            .addComponent(jrInactivos))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jcCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jcDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jcAlojamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jcMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jcTransporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(dateFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(dateFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jtCant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnGuardar)
                                    .addComponent(btnCalcular))
                                .addGap(8, 8, 8))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jcActivo)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        try {
            Cliente cli = (Cliente)jcCliente.getSelectedItem();
            Destino des = (Destino)jcDestino.getSelectedItem();
            Alojamiento alo = (Alojamiento)jcAlojamiento.getSelectedItem();
            Menu me = (Menu)jcMenu.getSelectedItem();
            Transporte tra = (Transporte)jcTransporte.getSelectedItem();

            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
            String fecha1 = formato.format(dateFechaInicio.getDate());
            String fecha2 = formato.format(dateFechaFinal.getDate());
            LocalDate f1 = LocalDate.parse(fecha1, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
            LocalDate f2 = LocalDate.parse(fecha2, DateTimeFormatter.ofPattern("dd/MM/yyyy"));

            int cant = Integer.parseInt(jtCant.getText());
            
            boolean activo = jcActivo.isSelected();

            Paquete pa = new Paquete(cli, tra, alo, me, des, f1, f2, activo);
            
            pd.agregarPaquete(pa);
            jtCosto.setText(pa.getCostoTotal()*cant+"");

            borrarFila();
            
        } catch (Throwable ex) {
            JOptionPane.showMessageDialog(this, "Error al guardar Paquete");
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        borrarFila();
        
        boolean check1 = jrTodos.isSelected();
        boolean check2 = jrActivos.isSelected();
        boolean check3 = jrInactivos.isSelected();
        
        if(check1) {
            llenarTablaTodos();
        } else if (check2) {
            llenarTablaActivos();
        } else if (check3) {
            llenarTablaInactivos();
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void jcDestinoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcDestinoItemStateChanged
        // TODO add your handling code here:
        Destino des = (Destino)jcDestino.getSelectedItem();
        
        jcAlojamiento.removeAllItems();
        jcTransporte.removeAllItems();
        llenarComboAlojamiento(des.getNombre());
        llenarComboTransporte(des.getNombre());
    }//GEN-LAST:event_jcDestinoItemStateChanged

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        // TODO add your handling code here:
        try {
            Alojamiento alo = (Alojamiento)jcAlojamiento.getSelectedItem();
            Menu me = (Menu)jcMenu.getSelectedItem();
            Transporte tra = (Transporte)jcTransporte.getSelectedItem();
            
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
            String fecha1 = formato.format(dateFechaInicio.getDate());
            String fecha2 = formato.format(dateFechaFinal.getDate());
            LocalDate f1 = LocalDate.parse(fecha1, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
            LocalDate f2 = LocalDate.parse(fecha2, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
            
            int cant = Integer.parseInt(jtCant.getText());
            
            double aloC = alo.getCosto() * calcularDias(f1, f2);
            double adicional = obtenerAdicional(f1);
            
            double total = calcular(aloC, me, tra) * adicional;
            
            jtCosto.setText(total * cant+"");
            btnGuardar.setEnabled(true);
            
        } catch (Throwable ex) {
            btnGuardar.setEnabled(false);
            JOptionPane.showMessageDialog(this, "No se pudo calcular el precio");
        }
    }//GEN-LAST:event_btnCalcularActionPerformed

    private void setearCalendario(){
        try {
            dateFechaInicio.getJCalendar().setSelectableDateRange(new Date(),new SimpleDateFormat("dd/MM/yyyy").parse("01/01/2030"));
            dateFechaFinal.getJCalendar().setSelectableDateRange(new Date(),new SimpleDateFormat("dd/MM/yyyy").parse("01/01/2030"));
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Error al setear calendario");
        }
    }
    
    // Llenar todo los combo box;
    private void llenarComboCliente() {
        for (Cliente cli: listaClientes) {
            if (cli.isActivo()) {
                jcCliente.addItem(cli);
            }
        }
    }
    
    private void llenarComboTransporte(String des) {
        for (Transporte tra: td.obtenerTransportesPorUbicacion(des)) {
            if (tra.isActivo()) {
                jcTransporte.addItem(tra);
            }
        }
    }
    
    private void llenarComboAlojamiento(String des) {
        for (Alojamiento alo: ad.obtenerAlojamientosPorUbicacion(des)) {
            if (alo.isActivo()) {
                jcAlojamiento.addItem(alo);
            }
        }
    }
    
    private void llenarComboMenu() {
        for (Menu me: listaMenues) {
            if (me.isActivo()) {
                jcMenu.addItem(me);
            }
        }
    }
    
    private void llenarComboDestino() {
        for (Destino des: listaDestinos) {
            if (des.isActivo()) {
                jcDestino.addItem(des);
            }
        }
    }
    
    // Crear y armar la tabla;
    private void armarCabecera() {
        ArrayList<Object> titulos = new ArrayList<>();
        
        titulos.add("ID");
        titulos.add("Transporte");
        titulos.add("Alojamiento");
        titulos.add("Menu");
        titulos.add("Destino");
        titulos.add("Activo");
        
        for (Object titulo: titulos) {
            modelo.addColumn(titulo);
        }
        
        jtabPaquetes.setModel(modelo);
    }
    
    private void borrarFila() {
        int filas = modelo.getRowCount() - 1;
        
        for (int cont = filas; cont >= 0; cont--) {
            modelo.removeRow(cont);
        }
    }
    
    private void llenarTablaTodos() {
        for (Paquete pa: listaPaquetes) {
            modelo.addRow(new Object[]{pa.getIdPaquete(), pa.getTransporte().getTipodetransporte(), pa.getAlojamiento().getNombre(), pa.getMenu().getTipoMenu(), pa.getDestino().getNombre(), pa.isActivo()});
        }
    }
    
    private void llenarTablaActivos() {
        for (Paquete pa: listaPaquetes) {
            if (pa.isActivo()) {
                modelo.addRow(new Object[]{pa.getIdPaquete(), pa.getTransporte().getTipodetransporte(), pa.getAlojamiento().getNombre(), pa.getMenu().getTipoMenu(), pa.getDestino().getNombre(), pa.isActivo()});
            }
        }
    }
    
    private void llenarTablaInactivos() {
        for (Paquete pa: listaPaquetes) {
            if (!pa.isActivo()) {
                modelo.addRow(new Object[]{pa.getIdPaquete(), pa.getTransporte().getTipodetransporte(), pa.getAlojamiento().getNombre(), pa.getMenu().getTipoMenu(), pa.getDestino().getNombre(), pa.isActivo()});
            }
        }
    }
    
    // Calculadores;
    private int calcularDias(LocalDate fecha1, LocalDate fecha2) {
        int dias = (int) ChronoUnit.DAYS.between(fecha1, fecha2);
        
        return dias;
    }
    
    private double obtenerAdicional(LocalDate fecha) {
        int mes = fecha.getMonth().getValue();
        switch (mes) {
            case 1:
            case 7:
                return 1.30;
            case 2:
            case 6:
                return 1.15;
            default:
                return 1;
        }
    }
    
    private double calcular(double alo, Menu me, Transporte tra) {
        double costo = alo + me.getCosto() + tra.getCosto();
        
        return costo;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCalcular;
    private javax.swing.ButtonGroup btnGrupo;
    private javax.swing.JButton btnGuardar;
    private com.toedter.calendar.JDateChooser dateFechaFinal;
    private com.toedter.calendar.JDateChooser dateFechaInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JCheckBox jcActivo;
    private javax.swing.JComboBox<Alojamiento> jcAlojamiento;
    private javax.swing.JComboBox<Cliente> jcCliente;
    private javax.swing.JComboBox<Destino> jcDestino;
    private javax.swing.JComboBox<Menu> jcMenu;
    private javax.swing.JComboBox<Transporte> jcTransporte;
    private javax.swing.JRadioButton jrActivos;
    private javax.swing.JRadioButton jrInactivos;
    private javax.swing.JRadioButton jrTodos;
    private javax.swing.JTextField jtCant;
    private javax.swing.JTextField jtCosto;
    private javax.swing.JTable jtabPaquetes;
    // End of variables declaration//GEN-END:variables
}
